<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d1" for="edge" attr.name="label" attr.type="string"/>
<key id="d0" for="node" attr.name="label" attr.type="string"/>
<graph edgedefault="undirected"><node id="wikipedia">
  <data key="d0">wikipedia</data>
</node>
<node id="p versus np problem">
  <data key="d0">p versus np problem</data>
</node>
<node id="major unsolved problem">
  <data key="d0">major unsolved problem</data>
</node>
<node id="computer science">
  <data key="d0">computer science</data>
</node>
<node id="verified solved">
  <data key="d0">verified solved</data>
</node>
<node id="algorithm">
  <data key="d0">algorithm</data>
</node>
<node id="polynomial time">
  <data key="d0">polynomial time</data>
</node>
<node id="size of input">
  <data key="d0">size of input</data>
</node>
<node id="algorithm size">
  <data key="d0">algorithm size</data>
</node>
<node id="time varies">
  <data key="d0">time varies</data>
</node>
<node id="completion varies with">
  <data key="d0">completion varies with</data>
</node>
<node id="time of input">
  <data key="d0">time of input</data>
</node>
<node id="class p">
  <data key="d0">class p</data>
</node>
<node id="time">
  <data key="d0">time</data>
</node>
<node id="questions">
  <data key="d0">questions</data>
</node>
<node id="input">
  <data key="d0">input</data>
</node>
<node id="exponentially">
  <data key="d0">exponentially</data>
</node>
<node id="solves">
  <data key="d0">solves</data>
</node>
<node id="polynomial">
  <data key="d0">polynomial</data>
</node>
<node id="p problems">
  <data key="d0">p problems</data>
</node>
<node id="np">
  <data key="d0">np</data>
</node>
<node id="polynomial problems">
  <data key="d0">polynomial problems</data>
</node>
<node id="p">
  <data key="d0">p</data>
</node>
<node id="problems">
  <data key="d0">problems</data>
</node>
<node id="harder to verify">
  <data key="d0">harder to verify</data>
</node>
<node id="solved problems">
  <data key="d0">solved problems</data>
</node>
<node id="proof">
  <data key="d0">proof</data>
</node>
<node id="mathematics">
  <data key="d0">mathematics</data>
</node>
<node id="cryptography">
  <data key="d0">cryptography</data>
</node>
<node id="artificial intelligence">
  <data key="d0">artificial intelligence</data>
</node>
<node id="game theory">
  <data key="d0">game theory</data>
</node>
<node id="multimedia processing">
  <data key="d0">multimedia processing</data>
</node>
<node id="philosophy">
  <data key="d0">philosophy</data>
</node>
<node id="science">
  <data key="d0">science</data>
</node>
<node id="economics">
  <data key="d0">economics</data>
</node>
<node id="$1">
  <data key="d0">$1</data>
</node>
<node id="millennium prize problems">
  <data key="d0">millennium prize problems</data>
</node>
<node id="clay mathematics institute">
  <data key="d0">clay mathematics institute</data>
</node>
<node id="problem">
  <data key="d0">problem</data>
</node>
<node id="1971">
  <data key="d0">1971</data>
</node>
<node id="stephen cook">
  <data key="d0">stephen cook</data>
</node>
<node id="leonid levin">
  <data key="d0">leonid levin</data>
</node>
<node id="two classes">
  <data key="d0">two classes</data>
</node>
<node id="p solving np">
  <data key="d0">p solving np</data>
</node>
<node id="polls">
  <data key="d0">polls</data>
</node>
<node id="william gasarch">
  <data key="d0">william gasarch</data>
</node>
<node id="p solving np attempts">
  <data key="d0">p solving np attempts</data>
</node>
<node id="2019">
  <data key="d0">2019</data>
</node>
<node id="experts">
  <data key="d0">experts</data>
</node>
<node id="believed">
  <data key="d0">believed</data>
</node>
<node id="99%">
  <data key="d0">99%</data>
</node>
<node id="2002.">
  <data key="d0">2002.</data>
</node>
<node id="83%">
  <data key="d0">83%</data>
</node>
<node id="confidence">
  <data key="d0">confidence</data>
</node>
<node id="2012">
  <data key="d0">2012</data>
</node>
<node id="2002">
  <data key="d0">2002</data>
</node>
<node id="88%">
  <data key="d0">88%</data>
</node>
<node id="increasing">
  <data key="d0">increasing</data>
</node>
<node id="william gasarch polls">
  <data key="d0">william gasarch polls</data>
</node>
<node id="expert belief">
  <data key="d0">expert belief</data>
</node>
<node id="polls  ">
  <data key="d0">polls  </data>
</node>
<node id="p solving np attempts  ">
  <data key="d0">p solving np attempts  </data>
</node>
<node id="experts  ">
  <data key="d0">experts  </data>
</node>
<node id="believed  ">
  <data key="d0">believed  </data>
</node>
<node id="99%  ">
  <data key="d0">99%  </data>
</node>
<node id="confidence  ">
  <data key="d0">confidence  </data>
</node>
<node id="2012  ">
  <data key="d0">2012  </data>
</node>
<node id="2002  ">
  <data key="d0">2002  </data>
</node>
<node id="88%  ">
  <data key="d0">88%  </data>
</node>
<node id="npcompleteness">
  <data key="d0">npcompleteness</data>
</node>
<node id="np  ">
  <data key="d0">np  </data>
</node>
<node id="npcomplete problem  ">
  <data key="d0">npcomplete problem  </data>
</node>
<node id="npcomplete problem">
  <data key="d0">npcomplete problem</data>
</node>
<node id="tough  ">
  <data key="d0">tough  </data>
</node>
<node id="reducible">
  <data key="d0">reducible</data>
</node>
<node id="npcomplete problems  ">
  <data key="d0">npcomplete problems  </data>
</node>
<node id="solution">
  <data key="d0">solution</data>
</node>
<node id="polynomial time  ">
  <data key="d0">polynomial time  </data>
</node>
<node id="increasing belief  ">
  <data key="d0">increasing belief  </data>
</node>
<node id="p  ">
  <data key="d0">p  </data>
</node>
<node id="tough">
  <data key="d0">tough</data>
</node>
<node id="npcomplete problems">
  <data key="d0">npcomplete problems</data>
</node>
<node id="verifiable">
  <data key="d0">verifiable</data>
</node>
<node id="solutions">
  <data key="d0">solutions</data>
</node>
<node id="boolean satisfiability problem">
  <data key="d0">boolean satisfiability problem</data>
</node>
<node id="npcomplete">
  <data key="d0">npcomplete</data>
</node>
<node id="cook–levin theorem">
  <data key="d0">cook–levin theorem</data>
</node>
<node id="ptime">
  <data key="d0">ptime</data>
</node>
<node id="npcompleteproblems">
  <data key="d0">npcompleteproblems</data>
</node>
<node id="fast algorithm">
  <data key="d0">fast algorithm</data>
</node>
<node id="boolean">
  <data key="d0">boolean</data>
</node>
<node id="satisfiability">
  <data key="d0">satisfiability</data>
</node>
<node id="sat">
  <data key="d0">sat</data>
</node>
<node id="turing">
  <data key="d0">turing</data>
</node>
<node id="definition">
  <data key="d0">definition</data>
</node>
<node id="sudoku">
  <data key="d0">sudoku</data>
</node>
<node id="polynomialtime">
  <data key="d0">polynomialtime</data>
</node>
<node id="latin squares">
  <data key="d0">latin squares</data>
</node>
<node id="polynomial complete">
  <data key="d0">polynomial complete</data>
</node>
<node id="boolean satisfiability">
  <data key="d0">boolean satisfiability</data>
</node>
<node id="polcomplete">
  <data key="d0">polcomplete</data>
</node>
<node id="tripartite graphs">
  <data key="d0">tripartite graphs</data>
</node>
<node id="partitioning">
  <data key="d0">partitioning</data>
</node>
<node id="triangles">
  <data key="d0">triangles</data>
</node>
<node id="3-sat">
  <data key="d0">3-sat</data>
</node>
<node id="problems outside p">
  <data key="d0">problems outside p</data>
</node>
<node id="p known">
  <data key="d0">p known</data>
</node>
<node id="exptime problems">
  <data key="d0">exptime problems</data>
</node>
<node id="exponential time">
  <data key="d0">exponential time</data>
</node>
<node id="problem turing machine">
  <data key="d0">problem turing machine</data>
</node>
<node id="turing machine">
  <data key="d0">turing machine</data>
</node>
<node id="o(2p(n) time polynomial">
  <data key="d0">o(2p(n) time polynomial</data>
</node>
<node id="2p(n) time polynomial function">
  <data key="d0">2p(n) time polynomial function</data>
</node>
<node id="exptimecomplete">
  <data key="d0">exptimecomplete</data>
</node>
<node id="exptime">
  <data key="d0">exptime</data>
</node>
<node id="o(2p(n) time polynomial)">
  <data key="d0">o(2p(n) time polynomial)</data>
</node>
<node id="reduction">
  <data key="d0">reduction</data>
</node>
<node id="hierarchy">
  <data key="d0">hierarchy</data>
</node>
<node id="board games">
  <data key="d0">board games</data>
</node>
<node id="strategy">
  <data key="d0">strategy</data>
</node>
<node id="chess">
  <data key="d0">chess</data>
</node>
<node id="examples">
  <data key="d0">examples</data>
</node>
<node id="presburger arithmetic">
  <data key="d0">presburger arithmetic</data>
</node>
<node id="fischer rabin">
  <data key="d0">fischer rabin</data>
</node>
<node id="algorithm for pres">
  <data key="d0">algorithm for pres</data>
</node>
<node id="decision">
  <data key="d0">decision</data>
</node>
<node id="class">
  <data key="d0">class</data>
</node>
<node id="#p">
  <data key="d0">#p</data>
</node>
<node id="counting">
  <data key="d0">counting</data>
</node>
<node id="how many">
  <data key="d0">how many</data>
</node>
<node id="difficult">
  <data key="d0">difficult</data>
</node>
<node id="#p problems">
  <data key="d0">#p problems</data>
</node>
<node id="count solutions">
  <data key="d0">count solutions</data>
</node>
<node id="decision problems">
  <data key="d0">decision problems</data>
</node>
<node id="greater than zero">
  <data key="d0">greater than zero</data>
</node>
<node id="1975">
  <data key="d0">1975</data>
</node>
<node id="ladner">
  <data key="d0">ladner</data>
</node>
<node id="p npcomplete">
  <data key="d0">p npcomplete</data>
</node>
<node id="np_problems">
  <data key="d0">np_problems</data>
</node>
<node id="integer factorization">
  <data key="d0">integer factorization</data>
</node>
<node id="npintermediate">
  <data key="d0">npintermediate</data>
</node>
<node id="discrete logarithm">
  <data key="d0">discrete logarithm</data>
</node>
<node id="graph isomorphism">
  <data key="d0">graph isomorphism</data>
</node>
<node id="relates with">
  <data key="d0">relates with</data>
</node>
<node id="exist">
  <data key="d0">exist</data>
</node>
<node id="graph isomorphism problem">
  <data key="d0">graph isomorphism problem</data>
</node>
<node id="graphs">
  <data key="d0">graphs</data>
</node>
<node id="isomorphic">
  <data key="d0">isomorphic</data>
</node>
<node id="unsolved">
  <data key="d0">unsolved</data>
</node>
<node id="answer">
  <data key="d0">answer</data>
</node>
<node id="complexity theory">
  <data key="d0">complexity theory</data>
</node>
<node id="polynomial time hierarchy">
  <data key="d0">polynomial time hierarchy</data>
</node>
<node id="second level">
  <data key="d0">second level</data>
</node>
<node id="np problems">
  <data key="d0">np problems</data>
</node>
<node id="second">
  <data key="d0">second</data>
</node>
<node id="level">
  <data key="d0">level</data>
</node>
<node id="lászló babai">
  <data key="d0">lászló babai</data>
</node>
<node id="best algorithm">
  <data key="d0">best algorithm</data>
</node>
<node id="quasipolynomial time">
  <data key="d0">quasipolynomial time</data>
</node>
<node id="general number field sieve">
  <data key="d0">general number field sieve</data>
</node>
<node id="first level">
  <data key="d0">first level</data>
</node>
<node id="best algorithm  ">
  <data key="d0">best algorithm  </data>
</node>
<node id="quasipolynomial time  ">
  <data key="d0">quasipolynomial time  </data>
</node>
<node id="integer factorization  ">
  <data key="d0">integer factorization  </data>
</node>
<node id="theoretical polynomial algorithm">
  <data key="d0">theoretical polynomial algorithm</data>
</node>
<node id="large factors  ">
  <data key="d0">large factors  </data>
</node>
<node id="big o notation">
  <data key="d0">big o notation</data>
</node>
<node id="constant h  ">
  <data key="d0">constant h  </data>
</node>
<node id="running time o(n2)">
  <data key="d0">running time o(n2)</data>
</node>
<node id="deciding g h  ">
  <data key="d0">deciding g h  </data>
</node>
<node id="theoretical polynomial algorithm  ">
  <data key="d0">theoretical polynomial algorithm  </data>
</node>
<node id="deciding g h">
  <data key="d0">deciding g h</data>
</node>
<node id="big o notation  ">
  <data key="d0">big o notation  </data>
</node>
<node id="large factors">
  <data key="d0">large factors</data>
</node>
<node id="running time o(n²)  ">
  <data key="d0">running time o(n²)  </data>
</node>
<node id="constant h">
  <data key="d0">constant h</data>
</node>
<node id="running time o(n²)">
  <data key="d0">running time o(n²)</data>
</node>
<node id="page_content">
  <data key="d0">page_content</data>
</node>
<node id="vertices">
  <data key="d0">vertices</data>
</node>
<node id="knuths h number">
  <data key="d0">knuths h number</data>
</node>
<node id="linear programming">
  <data key="d0">linear programming</data>
</node>
<node id="polynomial-time complexity">
  <data key="d0">polynomial-time complexity</data>
</node>
<node id="algorithm for linear programming">
  <data key="d0">algorithm for linear programming</data>
</node>
<node id="scientists">
  <data key="d0">scientists</data>
</node>
<node id="= np">
  <data key="d0">= np</data>
</node>
<node id="believe p ≠ np">
  <data key="d0">believe p ≠ np</data>
</node>
<node id="3000">
  <data key="d0">3000</data>
</node>
<node id="polynomialtime algorithm">
  <data key="d0">polynomialtime algorithm</data>
</node>
<node id="decades">
  <data key="d0">decades</data>
</node>
<node id="concept">
  <data key="d0">concept</data>
</node>
<node id="algorithms">
  <data key="d0">algorithms</data>
</node>
<node id="complexity">
  <data key="d0">complexity</data>
</node>
<node id="np complete problems">
  <data key="d0">np complete problems</data>
</node>
<node id="polynomial time algorithm">
  <data key="d0">polynomial time algorithm</data>
</node>
<node id="karp">
  <data key="d0">karp</data>
</node>
<node id="conp">
  <data key="d0">conp</data>
</node>
<node id="p=ph">
  <data key="d0">p=ph</data>
</node>
<node id="challenges">
  <data key="d0">challenges</data>
</node>
<node id="np complete">
  <data key="d0">np complete</data>
</node>
<node id="real-world experiences">
  <data key="d0">real-world experiences</data>
</node>
<node id="fundamental fields">
  <data key="d0">fundamental fields</data>
</node>
<node id="efficient problems">
  <data key="d0">efficient problems</data>
</node>
<node id="npcauses">
  <data key="d0">npcauses</data>
</node>
<node id="proof algorithms">
  <data key="d0">proof algorithms</data>
</node>
<node id="bounding polynomial">
  <data key="d0">bounding polynomial</data>
</node>
<node id="constructive">
  <data key="d0">constructive</data>
</node>
<node id="specific bound">
  <data key="d0">specific bound</data>
</node>
<node id="small">
  <data key="d0">small</data>
</node>
<node id="nonconstructive proof">
  <data key="d0">nonconstructive proof</data>
</node>
<node id="constructive algorithm">
  <data key="d0">constructive algorithm</data>
</node>
<node id="solution np">
  <data key="d0">solution np</data>
</node>
<node id="solution p">
  <data key="d0">solution p</data>
</node>
<node id="3sat">
  <data key="d0">3sat</data>
</node>
<node id="cryptosystems">
  <data key="d0">cryptosystems</data>
</node>
<node id="replacement">
  <data key="d0">replacement</data>
</node>
<node id="secure solutions">
  <data key="d0">secure solutions</data>
</node>
<node id="sciences">
  <data key="d0">sciences</data>
</node>
<node id="biotechnology">
  <data key="d0">biotechnology</data>
</node>
<node id="efficient algorithm">
  <data key="d0">efficient algorithm</data>
</node>
<node id="theorem">
  <data key="d0">theorem</data>
</node>
<node id="reasonable length">
  <data key="d0">reasonable length</data>
</node>
<node id="mathematicians">
  <data key="d0">mathematicians</data>
</node>
<node id="cmi">
  <data key="d0">cmi</data>
</node>
<node id="prize problems">
  <data key="d0">prize problems</data>
</node>
<node id="fermats last theorem">
  <data key="d0">fermats last theorem</data>
</node>
<node id="three centuries">
  <data key="d0">three centuries</data>
</node>
<node id="fermat's last theorem">
  <data key="d0">fermat's last theorem</data>
</node>
<node id="size">
  <data key="d0">size</data>
</node>
<node id="p≠np">
  <data key="d0">p≠np</data>
</node>
<node id="belief">
  <data key="d0">belief</data>
</node>
<node id="research">
  <data key="d0">research</data>
</node>
<node id="struggle">
  <data key="d0">struggle</data>
</node>
<node id="partial solutions">
  <data key="d0">partial solutions</data>
</node>
<node id="russell impagliazzo">
  <data key="d0">russell impagliazzo</data>
</node>
<node id="five worlds">
  <data key="d0">five worlds</data>
</node>
<node id="page_content=xa0≠xa0np leaves averagecase complexity. sat time worst all instances solvable. russell impagliazzo five worlds resolutions averagecase complexity. pxa0xa0np sat solved">
  <data key="d0">page_content=xa0≠xa0np leaves averagecase complexity. sat time worst all instances solvable. russell impagliazzo five worlds resolutions averagecase complexity. pxa0xa0np sat solved</data>
</node>
<node id="averagecase complexity">
  <data key="d0">averagecase complexity</data>
</node>
<node id="sat time">
  <data key="d0">sat time</data>
</node>
<node id="all instances">
  <data key="d0">all instances</data>
</node>
<node id="research ">
  <data key="d0">research </data>
</node>
<node id="five worlds ">
  <data key="d0">five worlds </data>
</node>
<node id="easy">
  <data key="d0">easy</data>
</node>
<node id="difficulty">
  <data key="d0">difficulty</data>
</node>
<node id="three">
  <data key="d0">three</data>
</node>
<node id="intermediate possibilities">
  <data key="d0">intermediate possibilities</data>
</node>
<node id="inter possibilities">
  <data key="d0">inter possibilities</data>
</node>
<node id="nphard">
  <data key="d0">nphard</data>
</node>
<node id="tractable">
  <data key="d0">tractable</data>
</node>
<node id="heuristica">
  <data key="d0">heuristica</data>
</node>
<node id="princeton university">
  <data key="d0">princeton university</data>
</node>
<node id="workshop">
  <data key="d0">workshop</data>
</node>
<node id="2009">
  <data key="d0">2009</data>
</node>
<node id="three  ">
  <data key="d0">three  </data>
</node>
<node id="intermediate possibilities  ">
  <data key="d0">intermediate possibilities  </data>
</node>
<node id="inter possibilities  ">
  <data key="d0">inter possibilities  </data>
</node>
<node id="problems  ">
  <data key="d0">problems  </data>
</node>
<node id="princeton university  ">
  <data key="d0">princeton university  </data>
</node>
<node id="2009  ">
  <data key="d0">2009  </data>
</node>
<node id="proof techniques  ">
  <data key="d0">proof techniques  </data>
</node>
<node id="p≠np  ">
  <data key="d0">p≠np  </data>
</node>
<node id="proof techniques">
  <data key="d0">proof techniques</data>
</node>
<node id="computational complexity theory  ">
  <data key="d0">computational complexity theory  </data>
</node>
<node id="insufficient  ">
  <data key="d0">insufficient  </data>
</node>
<node id="prove  ">
  <data key="d0">prove  </data>
</node>
<node id="barriers  ">
  <data key="d0">barriers  </data>
</node>
<node id="barriers">
  <data key="d0">barriers</data>
</node>
<node id="polynomialtime algorithm  ">
  <data key="d0">polynomialtime algorithm  </data>
</node>
<node id="p=np  ">
  <data key="d0">p=np  </data>
</node>
<node id="p=np">
  <data key="d0">p=np</data>
</node>
<node id="problem  ">
  <data key="d0">problem  </data>
</node>
<node id="results  ">
  <data key="d0">results  </data>
</node>
<node id="difficulty  ">
  <data key="d0">difficulty  </data>
</node>
<node id="workshop  ">
  <data key="d0">workshop  </data>
</node>
<node id="computational complexity theory">
  <data key="d0">computational complexity theory</data>
</node>
<node id="insufficient">
  <data key="d0">insufficient</data>
</node>
<node id="prove">
  <data key="d0">prove</data>
</node>
<node id="results">
  <data key="d0">results</data>
</node>
<node id="zfc">
  <data key="d0">zfc</data>
</node>
<node id="independence">
  <data key="d0">independence</data>
</node>
<node id="polynomialtime algorithms">
  <data key="d0">polynomialtime algorithms</data>
</node>
<node id="weaker assumptions">
  <data key="d0">weaker assumptions</data>
</node>
<node id="peano axioms">
  <data key="d0">peano axioms</data>
</node>
<node id="assumptions">
  <data key="d0">assumptions</data>
</node>
<node id="peano">
  <data key="d0">peano</data>
</node>
<node id="axioms">
  <data key="d0">axioms</data>
</node>
<node id="arithmetic">
  <data key="d0">arithmetic</data>
</node>
<node id="time algorithms">
  <data key="d0">time algorithms</data>
</node>
<node id="proofs">
  <data key="d0">proofs</data>
</node>
<node id="pa">
  <data key="d0">pa</data>
</node>
<node id="proving independence">
  <data key="d0">proving independence</data>
</node>
<node id="efficient algorithms">
  <data key="d0">efficient algorithms</data>
</node>
<node id="algorithms and computational complexity">
  <data key="d0">algorithms and computational complexity</data>
</node>
<node id="characterizations">
  <data key="d0">characterizations</data>
</node>
<node id="logical statements">
  <data key="d0">logical statements</data>
</node>
<node id="descriptive">
  <data key="d0">descriptive</data>
</node>
<node id="logical statements  ">
  <data key="d0">logical statements  </data>
</node>
<node id="descriptive  ">
  <data key="d0">descriptive  </data>
</node>
<node id="complexity  ">
  <data key="d0">complexity  </data>
</node>
<node id="languages">
  <data key="d0">languages</data>
</node>
<node id="finite structures  ">
  <data key="d0">finite structures  </data>
</node>
<node id="firstorder logic  ">
  <data key="d0">firstorder logic  </data>
</node>
<node id="finite structures">
  <data key="d0">finite structures</data>
</node>
<node id="fixed signature  ">
  <data key="d0">fixed signature  </data>
</node>
<node id="linear order relation  ">
  <data key="d0">linear order relation  </data>
</node>
<node id="linear order relation">
  <data key="d0">linear order relation</data>
</node>
<node id="functions  ">
  <data key="d0">functions  </data>
</node>
<node id="firstorder logic">
  <data key="d0">firstorder logic</data>
</node>
<node id="fixedpoint combinator  ">
  <data key="d0">fixedpoint combinator  </data>
</node>
<node id="fixed signature">
  <data key="d0">fixed signature</data>
</node>
<node id="functions">
  <data key="d0">functions</data>
</node>
<node id="fixedpoint combinator">
  <data key="d0">fixedpoint combinator</data>
</node>
<node id="signature">
  <data key="d0">signature</data>
</node>
<node id="predicate">
  <data key="d0">predicate</data>
</node>
<node id="function">
  <data key="d0">function</data>
</node>
<node id="space">
  <data key="d0">space</data>
</node>
<node id="structures">
  <data key="d0">structures</data>
</node>
<node id="recursive functions">
  <data key="d0">recursive functions</data>
</node>
<node id="number">
  <data key="d0">number</data>
</node>
<node id="elements">
  <data key="d0">elements</data>
</node>
<node id="structure">
  <data key="d0">structure</data>
</node>
<node id="existential secondorder quantification">
  <data key="d0">existential secondorder quantification</data>
</node>
<node id="polynomial hierarchy">
  <data key="d0">polynomial hierarchy</data>
</node>
<node id="secondorder logic">
  <data key="d0">secondorder logic</data>
</node>
<node id="nontrivial">
  <data key="d0">nontrivial</data>
</node>
<node id="first">
  <data key="d0">first</data>
</node>
<node id="nontrivial first-order structures">
  <data key="d0">nontrivial first-order structures</data>
</node>
<node id="fixed point">
  <data key="d0">fixed point</data>
</node>
<node id="page">
  <data key="d0">page</data>
</node>
<node id="ph">
  <data key="d0">ph</data>
</node>
<node id="polynomial accepting instances">
  <data key="d0">polynomial accepting instances</data>
</node>
<node id="rejecting instances">
  <data key="d0">rejecting instances</data>
</node>
<node id="enormous constants">
  <data key="d0">enormous constants</data>
</node>
<node id="algorithms impractical">
  <data key="d0">algorithms impractical</data>
</node>
<node id=" polynomial accepting instances">
  <data key="d0"> polynomial accepting instances</data>
</node>
<node id="rejected instances">
  <data key="d0">rejected instances</data>
</node>
<node id="instances">
  <data key="d0">instances</data>
</node>
<node id="levin">
  <data key="d0">levin</data>
</node>
<node id="levin's algorithm">
  <data key="d0">levin's algorithm</data>
</node>
<node id="levin's work">
  <data key="d0">levin's work</data>
</node>
<node id="example n npcomplete n languagesum n polynomial time">
  <data key="d0">example n npcomplete n languagesum n polynomial time</data>
</node>
<node id="npcomplete languagesum">
  <data key="d0">npcomplete languagesum</data>
</node>
<node id="polynomial time inputs">
  <data key="d0">polynomial time inputs</data>
</node>
<node id="acceptingcomplete language">
  <data key="d0">acceptingcomplete language</data>
</node>
<node id="definitions">
  <data key="d0">definitions</data>
</node>
<node id="input string">
  <data key="d0">input string</data>
</node>
<node id="string w">
  <data key="d0">string w</data>
</node>
<node id="n">
  <data key="d0">n</data>
</node>
<node id="alphabet">
  <data key="d0">alphabet</data>
</node>
<node id="σ">
  <data key="d0">σ</data>
</node>
<node id="outputs">
  <data key="d0">outputs</data>
</node>
<node id="yes">
  <data key="d0">yes</data>
</node>
<node id="memory">
  <data key="d0">memory</data>
</node>
<node id="steps">
  <data key="d0">steps</data>
</node>
<node id="k">
  <data key="d0">k</data>
</node>
<node id="c">
  <data key="d0">c</data>
</node>
<node id="constants">
  <data key="d0">constants</data>
</node>
<node id="correct answer">
  <data key="d0">correct answer</data>
</node>
<node id="decision problem">
  <data key="d0">decision problem</data>
</node>
<node id="subsetsum">
  <data key="d0">subsetsum</data>
</node>
<node id="shortest program">
  <data key="d0">shortest program</data>
</node>
<node id="finite alphabet">
  <data key="d0">finite alphabet</data>
</node>
<node id="verifier">
  <data key="d0">verifier</data>
</node>
<node id="certificate">
  <data key="d0">certificate</data>
</node>
<node id="deterministic">
  <data key="d0">deterministic</data>
</node>
<node id="deterministic turing machine">
  <data key="d0">deterministic turing machine</data>
</node>
<node id="certificate verifier">
  <data key="d0">certificate verifier</data>
</node>
<node id="finiteplaintext">
  <data key="d0">finiteplaintext</data>
</node>
<node id="∈">
  <data key="d0">∈</data>
</node>
<node id="l">
  <data key="d0">l</data>
</node>
<node id="conditions">
  <data key="d0">conditions</data>
</node>
<node id="r">
  <data key="d0">r</data>
</node>
<node id="binary relation">
  <data key="d0">binary relation</data>
</node>
<node id="someproblem">
  <data key="d0">someproblem</data>
</node>
<node id="timothy lanzone">
  <data key="d0">timothy lanzone</data>
</node>
<node id="sixth episode">
  <data key="d0">sixth episode</data>
</node>
<node id="travelling salesman">
  <data key="d0">travelling salesman</data>
</node>
<node id="equation p">
  <data key="d0">equation p</data>
</node>
<node id="dimension">
  <data key="d0">dimension</data>
</node>
<node id="homer">
  <data key="d0">homer</data>
</node>
<node id="simpsons">
  <data key="d0">simpsons</data>
</node>
<node id="simpions">
  <data key="d0">simpions</data>
</node>
<node id="mathematical ideas">
  <data key="d0">mathematical ideas</data>
</node>
<node id="second episode 2">
  <data key="d0">second episode 2</data>
</node>
<node id="sherlock">
  <data key="d0">sherlock</data>
</node>
<node id="watson">
  <data key="d0">watson</data>
</node>
<node id="murders">
  <data key="d0">murders</data>
</node>
<node id="notes">
  <data key="d0">notes</data>
</node>
<node id="references">
  <data key="d0">references</data>
</node>
<node id="free encyclopedia">
  <data key="d0">free encyclopedia</data>
</node>
<node id="(m)">
  <data key="d0">(m)</data>
</node>
<node id="\sigma">
  <data key="d0">\sigma</data>
</node>
<node id="halt">
  <data key="d0">halt</data>
</node>
<node id="t_{m}">
  <data key="d0">t_{m}</data>
</node>
<node id="t_{m}(w)">
  <data key="d0">t_{m}(w)</data>
</node>
<node id="n{k}">
  <data key="d0">n{k}</data>
</node>
<node id="o">
  <data key="d0">o</data>
</node>
<node id="\sigma*">
  <data key="d0">\sigma*</data>
</node>
<node id="|x^{k}">
  <data key="d0">|x^{k}</data>
</node>
<node id="t_{m}(n)">
  <data key="d0">t_{m}(n)</data>
</node>
<node id="m">
  <data key="d0">m</data>
</node>
<node id="l_{r}">
  <data key="d0">l_{r}</data>
</node>
<node id="{x#y">
  <data key="d0">{x#y</data>
</node>
<node id="{x">
  <data key="d0">{x</data>
</node>
<node id="y">
  <data key="d0">y</data>
</node>
<node id="|y">
  <data key="d0">|y</data>
</node>
<node id="(x)">
  <data key="d0">(x)</data>
</node>
<node id="{m}">
  <data key="d0">{m}</data>
</node>
<node id="sigma">
  <data key="d0">sigma</data>
</node>
<node id="sigma*">
  <data key="d0">sigma*</data>
</node>
<node id="t_{m}(n))">
  <data key="d0">t_{m}(n))</data>
</node>
<node id="(x">
  <data key="d0">(x</data>
</node>
<node id="y)">
  <data key="d0">y)</data>
</node>
<node id="deterministic polynomial-time turing machines">
  <data key="d0">deterministic polynomial-time turing machines</data>
</node>
<node id="time poly functions">
  <data key="d0">time poly functions</data>
</node>
<node id="t{m}(n)">
  <data key="d0">t{m}(n)</data>
</node>
<node id="f">
  <data key="d0">f</data>
</node>
<node id="w">
  <data key="d0">w</data>
</node>
<node id="composite">
  <data key="d0">composite</data>
</node>
<node id="x">
  <data key="d0">x</data>
</node>
<node id="mediawiki">
  <data key="d0">mediawiki</data>
</node>
<node id="wikimedia foundation">
  <data key="d0">wikimedia foundation</data>
</node>
<node id="\(1 &lt; y \leq x\)">
  <data key="d0">\(1 &lt; y \leq x\)</data>
</node>
<node id="\(x^{k}\)">
  <data key="d0">\(x^{k}\)</data>
</node>
<node id="&quot;x&quot;">
  <data key="d0">"x"</data>
</node>
<node id="&quot;prime factors&quot;">
  <data key="d0">"prime factors"</data>
</node>
<node id="birch and swinnerton-dyer conjecture hodge conjecture navier–stokes existence and smoothness p versus np problem poincaré conjecture (solved) riemann hypothesis yang–mills existence and mass gap">
  <data key="d0">birch and swinnerton-dyer conjecture hodge conjecture navier–stokes existence and smoothness p versus np problem poincaré conjecture (solved) riemann hypothesis yang–mills existence and mass gap</data>
</node>
<node id="0">
  <data key="d0">0</data>
</node>
<node id="vte">
  <data key="d0">vte</data>
</node>
<node id="1relativizing proofs">
  <data key="d0">1relativizing proofs</data>
</node>
<node id="relativizing proofs">
  <data key="d0">relativizing proofs</data>
</node>
<node id="imagine a world where every algorithm is allowed to make queries to some fixed subroutine called an oracle (which can answer a fixed set of questions in constant time">
  <data key="d0">imagine a world where every algorithm is allowed to make queries to some fixed subroutine called an oracle (which can answer a fixed set of questions in constant time</data>
</node>
<node id="natural proofs">
  <data key="d0">natural proofs</data>
</node>
<node id="1">
  <data key="d0">1</data>
</node>
<node id="in 1993">
  <data key="d0">in 1993</data>
</node>
<node id="algebrizing proofs">
  <data key="d0">algebrizing proofs</data>
</node>
<node id="2">
  <data key="d0">2</data>
</node>
<node id="after the baker–gill–solovay result">
  <data key="d0">after the baker–gill–solovay result</data>
</node>
<node id="2considered feasible">
  <data key="d0">2considered feasible</data>
</node>
<node id="considered feasible">
  <data key="d0">considered feasible</data>
</node>
<node id="dlogtime ac0 acc0 tc0 l sl rl fl nl nl-complete nc sc cc p p-complete zpp rp bpp bqp apx fp">
  <data key="d0">dlogtime ac0 acc0 tc0 l sl rl fl nl nl-complete nc sc cc p p-complete zpp rp bpp bqp apx fp</data>
</node>
<node id="suspected infeasible">
  <data key="d0">suspected infeasible</data>
</node>
<node id="up np np-complete np-hard co-np co-np-complete tfnp fnp am qma ph ⊕p pp #p #p-complete ip pspace pspace-complete">
  <data key="d0">up np np-complete np-hard co-np co-np-complete tfnp fnp am qma ph ⊕p pp #p #p-complete ip pspace pspace-complete</data>
</node>
<node id="considered infeasible">
  <data key="d0">considered infeasible</data>
</node>
<node id="exptime nexptime expspace 2-exptime elementary pr r re all">
  <data key="d0">exptime nexptime expspace 2-exptime elementary pr r re all</data>
</node>
<node id="class hierarchies">
  <data key="d0">class hierarchies</data>
</node>
<node id="3">
  <data key="d0">3</data>
</node>
<node id="polynomial hierarchy exponential hierarchy grzegorczyk hierarchy arithmetical hierarchy boolean hierarchy">
  <data key="d0">polynomial hierarchy exponential hierarchy grzegorczyk hierarchy arithmetical hierarchy boolean hierarchy</data>
</node>
<node id="families of classes">
  <data key="d0">families of classes</data>
</node>
<node id="4">
  <data key="d0">4</data>
</node>
<node id="dtime ntime dspace nspace probabilistically checkable proof interactive proof system">
  <data key="d0">dtime ntime dspace nspace probabilistically checkable proof interactive proof system</data>
</node>
<node id="list of complexity classes">
  <data key="d0">list of complexity classes</data>
</node>
<node id="5">
  <data key="d0">5</data>
</node>
<edge source="wikipedia" target="p versus np problem">
  <data key="d1">discusses</data>
</edge>
<edge source="wikipedia" target="page_content">
  <data key="d1">contains</data>
</edge>
<edge source="wikipedia" target="free encyclopedia">
  <data key="d1">also known as</data>
</edge>
<edge source="p versus np problem" target="major unsolved problem">
  <data key="d1">is a</data>
</edge>
<edge source="p versus np problem" target="computer science">
  <data key="d1">is significant for</data>
</edge>
<edge source="p versus np problem" target="verified solved">
  <data key="d1">asks</data>
</edge>
<edge source="p versus np problem" target="class p">
  <data key="d1">involves</data>
</edge>
<edge source="p versus np problem" target="solves">
  <data key="d1">questions</data>
</edge>
<edge source="p versus np problem" target="problem">
  <data key="d1">is a</data>
</edge>
<edge source="p versus np problem" target="1971">
  <data key="d1">first described in</data>
</edge>
<edge source="p versus np problem" target="stephen cook">
  <data key="d1">defined by</data>
</edge>
<edge source="p versus np problem" target="leonid levin">
  <data key="d1">related to</data>
</edge>
<edge source="p versus np problem" target="two classes">
  <data key="d1">divides into</data>
</edge>
<edge source="p versus np problem" target="millennium prize problems">
  <data key="d1">relates to</data>
</edge>
<edge source="p versus np problem" target="polls">
  <data key="d1">relate to</data>
</edge>
<edge source="p versus np problem" target="timothy lanzone">
  <data key="d1">studies</data>
</edge>
<edge source="p versus np problem" target="equation p">
  <data key="d1">related to</data>
</edge>
<edge source="p versus np problem" target="homer">
  <data key="d1">grapples with</data>
</edge>
<edge source="p versus np problem" target="np">
  <data key="d1">related to</data>
</edge>
<edge source="p versus np problem" target="sherlock">
  <data key="d1">studied by</data>
</edge>
<edge source="p versus np problem" target="watson">
  <data key="d1">studied by</data>
</edge>
<edge source="computer science" target="mathematics">
  <data key="d1">related to</data>
</edge>
<edge source="computer science" target="algorithm">
  <data key="d1">subfield of</data>
</edge>
<edge source="computer science" target="artificial intelligence">
  <data key="d1">subfield of</data>
</edge>
<edge source="computer science" target="game theory">
  <data key="d1">subfield of</data>
</edge>
<edge source="computer science" target="multimedia processing">
  <data key="d1">subfield of</data>
</edge>
<edge source="computer science" target="science">
  <data key="d1">important field in</data>
</edge>
<edge source="computer science" target="p problems">
  <data key="d1">related to</data>
</edge>
<edge source="computer science" target="np">
  <data key="d1">important problem in</data>
</edge>
<edge source="computer science" target="millennium prize problems">
  <data key="d1">significant in</data>
</edge>
<edge source="verified solved" target="algorithm">
  <data key="d1">is related to</data>
</edge>
<edge source="algorithm" target="polynomial time">
  <data key="d1">solves</data>
</edge>
<edge source="algorithm" target="size of input">
  <data key="d1">depends on</data>
</edge>
<edge source="algorithm" target="algorithm size">
  <data key="d1">depends on</data>
</edge>
<edge source="algorithm" target="time varies">
  <data key="d1">completion varies with</data>
</edge>
<edge source="algorithm" target="completion varies with">
  <data key="d1">depends on</data>
</edge>
<edge source="algorithm" target="time of input">
  <data key="d1">depends on</data>
</edge>
<edge source="algorithm" target="class p">
  <data key="d1">solves</data>
</edge>
<edge source="algorithm" target="time">
  <data key="d1">completion varies with</data>
</edge>
<edge source="algorithm" target="proof">
  <data key="d1">related to</data>
</edge>
<edge source="algorithm" target="cryptography">
  <data key="d1">related to</data>
</edge>
<edge source="algorithm" target="page_content">
  <data key="d1">considers</data>
</edge>
<edge source="algorithm" target="linear programming">
  <data key="d1">type</data>
</edge>
<edge source="algorithm" target="polynomial-time complexity">
  <data key="d1">operates in</data>
</edge>
<edge source="algorithm" target="npcomplete problems">
  <data key="d1">solves</data>
</edge>
<edge source="algorithm" target="solution">
  <data key="d1">without specifying</data>
</edge>
<edge source="algorithm" target="constructive">
  <data key="d1">requires</data>
</edge>
<edge source="algorithm" target="levin">
  <data key="d1">developed by</data>
</edge>
<edge source="algorithm" target="p">
  <data key="d1">related to</data>
</edge>
<edge source="algorithm" target="polynomial">
  <data key="d1">accepts</data>
</edge>
<edge source="algorithm" target="levin's work">
  <data key="d1">developed by</data>
</edge>
<edge source="algorithm" target="turing machine">
  <data key="d1">related to</data>
</edge>
<edge source="algorithm" target="steps">
  <data key="d1">involves</data>
</edge>
<edge source="algorithm" target="k">
  <data key="d1">involves</data>
</edge>
<edge source="algorithm" target="c">
  <data key="d1">involves</data>
</edge>
<edge source="algorithm" target="constants">
  <data key="d1">used in</data>
</edge>
<edge source="polynomial time" target="class p">
  <data key="d1">related to</data>
</edge>
<edge source="polynomial time" target="time">
  <data key="d1">can be measured in</data>
</edge>
<edge source="polynomial time" target="np">
  <data key="d1">subset of</data>
</edge>
<edge source="polynomial time" target="p">
  <data key="d1">involves</data>
</edge>
<edge source="polynomial time" target="problems">
  <data key="d1">solved in</data>
</edge>
<edge source="polynomial time" target="p problems">
  <data key="d1">based on</data>
</edge>
<edge source="polynomial time" target="solution">
  <data key="d1">is verifiable by</data>
</edge>
<edge source="polynomial time" target="solutions">
  <data key="d1">linked to</data>
</edge>
<edge source="polynomial time" target="npcomplete problem">
  <data key="d1">verifiable by</data>
</edge>
<edge source="polynomial time" target="efficient algorithm">
  <data key="d1">computed in</data>
</edge>
<edge source="polynomial time" target=" polynomial accepting instances">
  <data key="d1">has a relation to</data>
</edge>
<edge source="polynomial time" target="rejected instances">
  <data key="d1">connected by</data>
</edge>
<edge source="polynomial time" target="levin's algorithm">
  <data key="d1">evaluates in</data>
</edge>
<edge source="polynomial time" target="decision problem">
  <data key="d1">solved in</data>
</edge>
<edge source="polynomial time" target="steps">
  <data key="d1">measured in</data>
</edge>
<edge source="polynomial time" target="deterministic">
  <data key="d1">subset of</data>
</edge>
<edge source="polynomial time" target="verifier">
  <data key="d1">used by</data>
</edge>
<edge source="polynomial time" target="someproblem">
  <data key="d1">verified in</data>
</edge>
<edge source="class p" target="questions">
  <data key="d1">contains</data>
</edge>
<edge source="class p" target="np">
  <data key="d1">solved in</data>
</edge>
<edge source="time" target="input">
  <data key="d1">completion varies with</data>
</edge>
<edge source="time" target="presburger arithmetic">
  <data key="d1">requires</data>
</edge>
<edge source="questions" target="decision">
  <data key="d1">related to</data>
</edge>
<edge source="input" target="exponentially">
  <data key="d1">grows</data>
</edge>
<edge source="input" target="halt">
  <data key="d1">paired with</data>
</edge>
<edge source="input" target="steps">
  <data key="d1">required by</data>
</edge>
<edge source="input" target="t_{m}(n)">
  <data key="d1">initiates</data>
</edge>
<edge source="polynomial" target="p problems">
  <data key="d1">solves</data>
</edge>
<edge source="polynomial" target="np">
  <data key="d1">reduced to</data>
</edge>
<edge source="polynomial" target="npcomplete">
  <data key="d1">encompasses</data>
</edge>
<edge source="polynomial" target="p">
  <data key="d1">defined by</data>
</edge>
<edge source="polynomial" target="function">
  <data key="d1">analyzed in</data>
</edge>
<edge source="polynomial" target="structures">
  <data key="d1">classified under</data>
</edge>
<edge source="polynomial" target="mathematics">
  <data key="d1">utilized in</data>
</edge>
<edge source="polynomial" target="structure">
  <data key="d1">characterizes</data>
</edge>
<edge source="polynomial" target="instances">
  <data key="d1">is a type of</data>
</edge>
<edge source="np" target="polynomial problems">
  <data key="d1">contained in</data>
</edge>
<edge source="np" target="npcomplete problem  ">
  <data key="d1">transformed to</data>
</edge>
<edge source="np" target="confidence  ">
  <data key="d1">is related to</data>
</edge>
<edge source="np" target="npcompleteness">
  <data key="d1">is a concept of</data>
</edge>
<edge source="np" target="npcomplete problem">
  <data key="d1">transformed to</data>
</edge>
<edge source="np" target="boolean">
  <data key="d1">includes</data>
</edge>
<edge source="np" target="turing">
  <data key="d1">defined by</data>
</edge>
<edge source="np" target="#p">
  <data key="d1">subset of</data>
</edge>
<edge source="np" target="count solutions">
  <data key="d1">difficult to</data>
</edge>
<edge source="np" target="#p problems">
  <data key="d1">related to</data>
</edge>
<edge source="np" target="1975">
  <data key="d1">exists in</data>
</edge>
<edge source="np" target="decision">
  <data key="d1">related to</data>
</edge>
<edge source="np" target="problems">
  <data key="d1">subset of</data>
</edge>
<edge source="np" target="relates with">
  <data key="d1">difficult</data>
</edge>
<edge source="np" target="complexity theory">
  <data key="d1">connected to</data>
</edge>
<edge source="np" target="npcomplete problems">
  <data key="d1">includes</data>
</edge>
<edge source="np" target="karp">
  <data key="d1">known for</data>
</edge>
<edge source="np" target="conp">
  <data key="d1">complement of</data>
</edge>
<edge source="np" target="p">
  <data key="d1">equivalent to</data>
</edge>
<edge source="np" target="npcomplete">
  <data key="d1">type of</data>
</edge>
<edge source="np" target="fundamental fields">
  <data key="d1">applied in</data>
</edge>
<edge source="np" target="p=ph">
  <data key="d1">implication if</data>
</edge>
<edge source="np" target="efficient problems">
  <data key="d1">fundamental in</data>
</edge>
<edge source="np" target="proof">
  <data key="d1">relates to</data>
</edge>
<edge source="np" target="p≠np">
  <data key="d1">opposite of</data>
</edge>
<edge source="np" target="belief">
  <data key="d1">relates to</data>
</edge>
<edge source="np" target="research">
  <data key="d1">concerns</data>
</edge>
<edge source="np" target="sat">
  <data key="d1">related to</data>
</edge>
<edge source="np" target="tractable">
  <data key="d1">found in</data>
</edge>
<edge source="np" target="averagecase complexity">
  <data key="d1">involves</data>
</edge>
<edge source="np" target="problems  ">
  <data key="d1">subset of</data>
</edge>
<edge source="np" target="p≠np  ">
  <data key="d1">related to</data>
</edge>
<edge source="np" target="existential secondorder quantification">
  <data key="d1">has</data>
</edge>
<edge source="np" target="languages">
  <data key="d1">describes</data>
</edge>
<edge source="np" target="secondorder logic">
  <data key="d1">confirm capabilities</data>
</edge>
<edge source="np" target="ph">
  <data key="d1">implies</data>
</edge>
<edge source="np" target="np">
  <data key="d1">negative of</data>
</edge>
<edge source="np" target="fixed point">
  <data key="d1">related to</data>
</edge>
<edge source="np" target="definitions">
  <data key="d1">related to</data>
</edge>
<edge source="np" target="subsetsum">
  <data key="d1">related to</data>
</edge>
<edge source="np" target="shortest program">
  <data key="d1">related to</data>
</edge>
<edge source="np" target="finite alphabet">
  <data key="d1">languages</data>
</edge>
<edge source="np" target="verifier">
  <data key="d1">polynomial time</data>
</edge>
<edge source="np" target="deterministic turing machine">
  <data key="d1">related to</data>
</edge>
<edge source="np" target="polynomialtime">
  <data key="d1">subset of</data>
</edge>
<edge source="np" target="deterministic">
  <data key="d1">recognizes</data>
</edge>
<edge source="np" target="∈">
  <data key="d1">type of</data>
</edge>
<edge source="np" target="l">
  <data key="d1">type of</data>
</edge>
<edge source="np" target="problem">
  <data key="d1">classified as</data>
</edge>
<edge source="np" target="mathematicians">
  <data key="d1">related to</data>
</edge>
<edge source="p" target="solved problems">
  <data key="d1">contains</data>
</edge>
<edge source="p" target="confidence">
  <data key="d1">increasing</data>
</edge>
<edge source="p" target="confidence  ">
  <data key="d1">increasing</data>
</edge>
<edge source="p" target="npcomplete">
  <data key="d1">important problems</data>
</edge>
<edge source="p" target="problems outside p">
  <data key="d1">has</data>
</edge>
<edge source="p" target="p known">
  <data key="d1">includes</data>
</edge>
<edge source="p" target="polynomialtime">
  <data key="d1">relates to</data>
</edge>
<edge source="p" target="exptime">
  <data key="d1">has problems outside</data>
</edge>
<edge source="p" target="exptimecomplete">
  <data key="d1">not equal to</data>
</edge>
<edge source="p" target="exponential time">
  <data key="d1">requires</data>
</edge>
<edge source="p" target="npcomplete problems">
  <data key="d1">versus</data>
</edge>
<edge source="p" target="np complete problems">
  <data key="d1">versus</data>
</edge>
<edge source="p" target="p=ph">
  <data key="d1">equal to</data>
</edge>
<edge source="p" target="easy">
  <data key="d1">not equal to</data>
</edge>
<edge source="p" target="problem">
  <data key="d1">versus</data>
</edge>
<edge source="p" target="zfc">
  <data key="d1">unprovable by</data>
</edge>
<edge source="p" target="independence">
  <data key="d1">unprovable by</data>
</edge>
<edge source="p" target="polynomialtime algorithms">
  <data key="d1">related to</data>
</edge>
<edge source="p" target="characterizations">
  <data key="d1">describe</data>
</edge>
<edge source="p" target="logical statements">
  <data key="d1">restated by</data>
</edge>
<edge source="p" target="efficient algorithms">
  <data key="d1">challenge</data>
</edge>
<edge source="p" target="logical statements  ">
  <data key="d1">restated by</data>
</edge>
<edge source="p" target="polynomial hierarchy">
  <data key="d1">includes</data>
</edge>
<edge source="p" target="polynomial accepting instances">
  <data key="d1">regulates</data>
</edge>
<edge source="p" target="acceptingcomplete language">
  <data key="d1">belongs to</data>
</edge>
<edge source="p" target="definitions">
  <data key="d1">related to</data>
</edge>
<edge source="p" target="decision problem">
  <data key="d1">includes</data>
</edge>
<edge source="problems" target="harder to verify">
  <data key="d1">believed</data>
</edge>
<edge source="problems" target="verifiable">
  <data key="d1">solutions</data>
</edge>
<edge source="problems" target="npcomplete problems">
  <data key="d1">verified by</data>
</edge>
<edge source="problems" target="npcomplete">
  <data key="d1">are</data>
</edge>
<edge source="problems" target="reduction">
  <data key="d1">type of</data>
</edge>
<edge source="problems" target="exptimecomplete">
  <data key="d1">include</data>
</edge>
<edge source="problems" target="presburger arithmetic">
  <data key="d1">example of</data>
</edge>
<edge source="problems" target="fischer rabin">
  <data key="d1">contributed to</data>
</edge>
<edge source="problems" target="class">
  <data key="d1">contains</data>
</edge>
<edge source="problems" target="ladner">
  <data key="d1">showed</data>
</edge>
<edge source="problems" target="p npcomplete">
  <data key="d1">unequal to</data>
</edge>
<edge source="problems" target="prize problems">
  <data key="d1">associated with</data>
</edge>
<edge source="problems" target="nphard">
  <data key="d1">subset of</data>
</edge>
<edge source="proof" target="mathematics">
  <data key="d1">related to</data>
</edge>
<edge source="proof" target="cryptography">
  <data key="d1">related to</data>
</edge>
<edge source="proof" target="artificial intelligence">
  <data key="d1">related to</data>
</edge>
<edge source="proof" target="game theory">
  <data key="d1">related to</data>
</edge>
<edge source="proof" target="multimedia processing">
  <data key="d1">related to</data>
</edge>
<edge source="proof" target="philosophy">
  <data key="d1">related to</data>
</edge>
<edge source="proof" target="science">
  <data key="d1">important field in</data>
</edge>
<edge source="proof" target="cook–levin theorem">
  <data key="d1">proves</data>
</edge>
<edge source="proof" target="constructive algorithm">
  <data key="d1">type of</data>
</edge>
<edge source="proof" target="reasonable length">
  <data key="d1">requires</data>
</edge>
<edge source="proof" target="prize problems">
  <data key="d1">related to</data>
</edge>
<edge source="proof" target="size">
  <data key="d1">determines</data>
</edge>
<edge source="proof" target="p≠np">
  <data key="d1">relates to</data>
</edge>
<edge source="proof" target="theorem">
  <data key="d1">relates to</data>
</edge>
<edge source="proof" target="averagecase complexity">
  <data key="d1">concerns</data>
</edge>
<edge source="mathematics" target="cryptography">
  <data key="d1">related to</data>
</edge>
<edge source="mathematics" target="philosophy">
  <data key="d1">related to</data>
</edge>
<edge source="mathematics" target="game theory">
  <data key="d1">related to</data>
</edge>
<edge source="mathematics" target="artificial intelligence">
  <data key="d1">related to</data>
</edge>
<edge source="mathematics" target="multimedia processing">
  <data key="d1">related to</data>
</edge>
<edge source="mathematics" target="theorem">
  <data key="d1">related to</data>
</edge>
<edge source="mathematics" target="fermats last theorem">
  <data key="d1">involves</data>
</edge>
<edge source="cryptography" target="artificial intelligence">
  <data key="d1">related to</data>
</edge>
<edge source="cryptography" target="game theory">
  <data key="d1">related to</data>
</edge>
<edge source="cryptography" target="multimedia processing">
  <data key="d1">related to</data>
</edge>
<edge source="cryptography" target="science">
  <data key="d1">important field in</data>
</edge>
<edge source="artificial intelligence" target="science">
  <data key="d1">important field in</data>
</edge>
<edge source="game theory" target="science">
  <data key="d1">important field in</data>
</edge>
<edge source="multimedia processing" target="science">
  <data key="d1">important field in</data>
</edge>
<edge source="philosophy" target="science">
  <data key="d1">important field in</data>
</edge>
<edge source="philosophy" target="economics">
  <data key="d1">related to</data>
</edge>
<edge source="science" target="economics">
  <data key="d1">important field in</data>
</edge>
<edge source="$1" target="millennium prize problems">
  <data key="d1">prize amount</data>
</edge>
<edge source="millennium prize problems" target="clay mathematics institute">
  <data key="d1">prize given by</data>
</edge>
<edge source="problem" target="boolean">
  <data key="d1">is</data>
</edge>
<edge source="problem" target="npcomplete">
  <data key="d1">proving</data>
</edge>
<edge source="problem" target="boolean satisfiability problem">
  <data key="d1">is</data>
</edge>
<edge source="problem" target="exptimecomplete">
  <data key="d1">involves</data>
</edge>
<edge source="problem" target="exptime">
  <data key="d1">is</data>
</edge>
<edge source="problem" target="results  ">
  <data key="d1">presents</data>
</edge>
<edge source="problem" target="p=np">
  <data key="d1">concerns</data>
</edge>
<edge source="problem" target="results">
  <data key="d1">presents</data>
</edge>
<edge source="problem" target="weaker assumptions">
  <data key="d1">undecidable under</data>
</edge>
<edge source="problem" target="p≠np">
  <data key="d1">related to</data>
</edge>
<edge source="problem" target="computational complexity theory">
  <data key="d1">involves</data>
</edge>
<edge source="problem" target="scientists">
  <data key="d1">assumed by</data>
</edge>
<edge source="problem" target="arithmetic">
  <data key="d1">related to</data>
</edge>
<edge source="problem" target="binary relation">
  <data key="d1">involves</data>
</edge>
<edge source="stephen cook" target="efficient algorithm">
  <data key="d1">proof</data>
</edge>
<edge source="p solving np" target="polls">
  <data key="d1">imply</data>
</edge>
<edge source="p solving np" target="confidence">
  <data key="d1">drives</data>
</edge>
<edge source="p solving np" target="polls  ">
  <data key="d1">imply</data>
</edge>
<edge source="p solving np" target="npcompleteness">
  <data key="d1">involves</data>
</edge>
<edge source="polls" target="william gasarch">
  <data key="d1">conducted by</data>
</edge>
<edge source="polls" target="p solving np attempts">
  <data key="d1">imply</data>
</edge>
<edge source="polls" target="confidence">
  <data key="d1">relates to</data>
</edge>
<edge source="polls" target="p solving np attempts  ">
  <data key="d1">imply</data>
</edge>
<edge source="william gasarch" target="polls  ">
  <data key="d1">conducted by</data>
</edge>
<edge source="william gasarch" target="experts  ">
  <data key="d1">asks</data>
</edge>
<edge source="p solving np attempts" target="confidence">
  <data key="d1">influenced by</data>
</edge>
<edge source="2019" target="experts">
  <data key="d1">believed</data>
</edge>
<edge source="2019" target="believed">
  <data key="d1">experts</data>
</edge>
<edge source="2019" target="experts  ">
  <data key="d1">believed</data>
</edge>
<edge source="2019" target="believed  ">
  <data key="d1">experts</data>
</edge>
<edge source="experts" target="99%">
  <data key="d1">believed</data>
</edge>
<edge source="experts" target="2002.">
  <data key="d1">believed</data>
</edge>
<edge source="experts" target="william gasarch polls">
  <data key="d1">engage</data>
</edge>
<edge source="believed" target="99%">
  <data key="d1">experts</data>
</edge>
<edge source="believed" target="99%  ">
  <data key="d1">experts</data>
</edge>
<edge source="99%" target="experts  ">
  <data key="d1">believed</data>
</edge>
<edge source="2002." target="experts  ">
  <data key="d1">believed</data>
</edge>
<edge source="83%" target="confidence">
  <data key="d1">increasing</data>
</edge>
<edge source="83%" target="confidence  ">
  <data key="d1">increasing</data>
</edge>
<edge source="confidence" target="2012">
  <data key="d1">increasing</data>
</edge>
<edge source="confidence" target="2002">
  <data key="d1">increasing</data>
</edge>
<edge source="confidence" target="88%">
  <data key="d1">increasing</data>
</edge>
<edge source="confidence" target="expert belief">
  <data key="d1">reflects</data>
</edge>
<edge source="confidence" target="2012  ">
  <data key="d1">increasing</data>
</edge>
<edge source="confidence" target="2002  ">
  <data key="d1">increasing</data>
</edge>
<edge source="confidence" target="88%  ">
  <data key="d1">increasing</data>
</edge>
<edge source="confidence" target="increasing belief  ">
  <data key="d1">indicates</data>
</edge>
<edge source="2012" target="increasing">
  <data key="d1">confidence</data>
</edge>
<edge source="2002" target="increasing">
  <data key="d1">confidence</data>
</edge>
<edge source="increasing" target="2002  ">
  <data key="d1">confidence</data>
</edge>
<edge source="increasing" target="2012  ">
  <data key="d1">confidence</data>
</edge>
<edge source="npcompleteness" target="np  ">
  <data key="d1">is a concept of</data>
</edge>
<edge source="np  " target="tractable">
  <data key="d1">found in</data>
</edge>
<edge source="npcomplete problem" target="tough  ">
  <data key="d1">is described as</data>
</edge>
<edge source="npcomplete problem" target="p  ">
  <data key="d1">converted from</data>
</edge>
<edge source="npcomplete problem" target="tough">
  <data key="d1">is described as</data>
</edge>
<edge source="npcomplete problem" target="verifiable">
  <data key="d1">has solutions that are</data>
</edge>
<edge source="npcomplete problem" target="solutions">
  <data key="d1">related to</data>
</edge>
<edge source="reducible" target="npcomplete problems  ">
  <data key="d1">are</data>
</edge>
<edge source="reducible" target="npcomplete problems">
  <data key="d1">are</data>
</edge>
<edge source="npcomplete problems  " target="barriers">
  <data key="d1">exist in</data>
</edge>
<edge source="npcomplete problems  " target="heuristica">
  <data key="d1">discussed</data>
</edge>
<edge source="solution" target="polynomial time  ">
  <data key="d1">is verifiable by</data>
</edge>
<edge source="solution" target="nonconstructive proof">
  <data key="d1">provide</data>
</edge>
<edge source="solution" target="npcomplete">
  <data key="d1">solved by</data>
</edge>
<edge source="solution" target="proof algorithms">
  <data key="d1">provide</data>
</edge>
<edge source="solution" target="constructive algorithm">
  <data key="d1">requires</data>
</edge>
<edge source="p  " target="easy">
  <data key="d1">not equal to</data>
</edge>
<edge source="p  " target="characterizations">
  <data key="d1">describe</data>
</edge>
<edge source="npcomplete problems" target="3000">
  <data key="d1">number</data>
</edge>
<edge source="npcomplete problems" target="proof algorithms">
  <data key="d1">used for</data>
</edge>
<edge source="npcomplete problems" target="polynomialtime algorithm  ">
  <data key="d1">solve by</data>
</edge>
<edge source="npcomplete problems" target="barriers">
  <data key="d1">exist in</data>
</edge>
<edge source="npcomplete problems" target="polynomialtime algorithm">
  <data key="d1">solve by</data>
</edge>
<edge source="verifiable" target="npcomplete">
  <data key="d1">requiring</data>
</edge>
<edge source="solutions" target="greater than zero">
  <data key="d1">exist</data>
</edge>
<edge source="solutions" target="exist">
  <data key="d1">greater than zero</data>
</edge>
<edge source="solutions" target="partial solutions">
  <data key="d1">related to</data>
</edge>
<edge source="boolean satisfiability problem" target="npcomplete">
  <data key="d1">is</data>
</edge>
<edge source="boolean satisfiability problem" target="cook–levin theorem">
  <data key="d1">proven by</data>
</edge>
<edge source="npcomplete" target="cook–levin theorem">
  <data key="d1">can be proven by</data>
</edge>
<edge source="npcomplete" target="ptime">
  <data key="d1">transformed to</data>
</edge>
<edge source="npcomplete" target="npcompleteproblems">
  <data key="d1">are</data>
</edge>
<edge source="npcomplete" target="fast algorithm">
  <data key="d1">has no</data>
</edge>
<edge source="npcomplete" target="turing">
  <data key="d1">defined by</data>
</edge>
<edge source="npcomplete" target="sudoku">
  <data key="d1">type of</data>
</edge>
<edge source="npcomplete" target="sat">
  <data key="d1">is example of</data>
</edge>
<edge source="npcomplete" target="boolean">
  <data key="d1">involves</data>
</edge>
<edge source="npcomplete" target="complexity theory">
  <data key="d1">contains</data>
</edge>
<edge source="npcomplete" target="npcomplete">
  <data key="d1">includes</data>
</edge>
<edge source="npcomplete" target="answer">
  <data key="d1">is not</data>
</edge>
<edge source="npcomplete" target="polynomial time hierarchy">
  <data key="d1">collapses</data>
</edge>
<edge source="npcomplete" target="solution np">
  <data key="d1">include</data>
</edge>
<edge source="npcomplete" target="3sat">
  <data key="d1">example of</data>
</edge>
<edge source="npcomplete" target="l">
  <data key="d1">reduced to</data>
</edge>
<edge source="npcomplete" target="someproblem">
  <data key="d1">contains</data>
</edge>
<edge source="npcomplete" target="travelling salesman">
  <data key="d1">is example of</data>
</edge>
<edge source="cook–levin theorem" target="sudoku">
  <data key="d1">can be proven by</data>
</edge>
<edge source="boolean" target="satisfiability">
  <data key="d1">type of</data>
</edge>
<edge source="satisfiability" target="sat">
  <data key="d1">is a type of</data>
</edge>
<edge source="sat" target="turing">
  <data key="d1">defined by</data>
</edge>
<edge source="sat" target="boolean satisfiability">
  <data key="d1">a type of</data>
</edge>
<edge source="sat" target="polynomialtime">
  <data key="d1">solves</data>
</edge>
<edge source="sat" target="3-sat">
  <data key="d1">is linked to</data>
</edge>
<edge source="sat" target="all instances">
  <data key="d1">are solved by</data>
</edge>
<edge source="sat" target="p≠np">
  <data key="d1">related to</data>
</edge>
<edge source="sat" target="nphard">
  <data key="d1">instance of</data>
</edge>
<edge source="turing" target="definition">
  <data key="d1">characterizes</data>
</edge>
<edge source="sudoku" target="sudoku">
  <data key="d1">is a type of</data>
</edge>
<edge source="sudoku" target="polynomialtime">
  <data key="d1">has a solution with</data>
</edge>
<edge source="sudoku" target="latin squares">
  <data key="d1">is related to</data>
</edge>
<edge source="sudoku" target="boolean satisfiability">
  <data key="d1">is related to</data>
</edge>
<edge source="sudoku" target="tripartite graphs">
  <data key="d1">can be connected by</data>
</edge>
<edge source="polynomialtime" target="polynomial complete">
  <data key="d1">is a type of</data>
</edge>
<edge source="polynomialtime" target="partitioning">
  <data key="d1">is applicable to</data>
</edge>
<edge source="polynomialtime" target="triangles">
  <data key="d1">is applicable to</data>
</edge>
<edge source="polynomialtime" target="deterministic">
  <data key="d1">subset of</data>
</edge>
<edge source="latin squares" target="latin squares">
  <data key="d1">is a type of</data>
</edge>
<edge source="latin squares" target="polynomial complete">
  <data key="d1">solves</data>
</edge>
<edge source="polynomial complete" target="boolean satisfiability">
  <data key="d1">is concerned with</data>
</edge>
<edge source="polynomial complete" target="polcomplete">
  <data key="d1">is a type of</data>
</edge>
<edge source="polynomial complete" target="exptimecomplete">
  <data key="d1">is connected to</data>
</edge>
<edge source="boolean satisfiability" target="boolean satisfiability">
  <data key="d1">concerns</data>
</edge>
<edge source="tripartite graphs" target="partitioning">
  <data key="d1">concerns</data>
</edge>
<edge source="tripartite graphs" target="triangles">
  <data key="d1">are a special case of</data>
</edge>
<edge source="exptime problems" target="exponential time">
  <data key="d1">have</data>
</edge>
<edge source="exptime problems" target="turing machine">
  <data key="d1">involves</data>
</edge>
<edge source="exponential time" target="hierarchy">
  <data key="d1">less than in</data>
</edge>
<edge source="exponential time" target="exptimecomplete">
  <data key="d1">requires</data>
</edge>
<edge source="problem turing machine" target="turing machine">
  <data key="d1">involves</data>
</edge>
<edge source="turing machine" target="memory">
  <data key="d1">uses</data>
</edge>
<edge source="o(2p(n) time polynomial" target="2p(n) time polynomial function">
  <data key="d1">is a</data>
</edge>
<edge source="exptimecomplete" target="o(2p(n) time polynomial)">
  <data key="d1">requires</data>
</edge>
<edge source="exptimecomplete" target="chess">
  <data key="d1">is an example of</data>
</edge>
<edge source="exptimecomplete" target="board games">
  <data key="d1">is an example of</data>
</edge>
<edge source="exptimecomplete" target="hierarchy">
  <data key="d1">belongs to</data>
</edge>
<edge source="exptimecomplete" target="strategy">
  <data key="d1">applied to</data>
</edge>
<edge source="hierarchy" target="chess">
  <data key="d1">part of</data>
</edge>
<edge source="hierarchy" target="board games">
  <data key="d1">part of</data>
</edge>
<edge source="hierarchy" target="level">
  <data key="d1">collapses</data>
</edge>
<edge source="hierarchy" target="second level">
  <data key="d1">part of</data>
</edge>
<edge source="hierarchy" target="second">
  <data key="d1">includes</data>
</edge>
<edge source="hierarchy" target="first level">
  <data key="d1">has</data>
</edge>
<edge source="board games" target="strategy">
  <data key="d1">used in</data>
</edge>
<edge source="strategy" target="chess">
  <data key="d1">used in</data>
</edge>
<edge source="strategy" target="examples">
  <data key="d1">include</data>
</edge>
<edge source="fischer rabin" target="algorithm for pres">
  <data key="d1">proved</data>
</edge>
<edge source="algorithm for pres" target="decision problems">
  <data key="d1">address</data>
</edge>
<edge source="algorithm for pres" target="#p">
  <data key="d1">involves</data>
</edge>
<edge source="#p" target="counting">
  <data key="d1">asks</data>
</edge>
<edge source="#p" target="how many">
  <data key="d1">tasks</data>
</edge>
<edge source="#p" target="difficult">
  <data key="d1">problem</data>
</edge>
<edge source="#p" target="#p problems">
  <data key="d1">subset of</data>
</edge>
<edge source="how many" target="greater than zero">
  <data key="d1">determines</data>
</edge>
<edge source="ladner" target="npintermediate">
  <data key="d1">introduced</data>
</edge>
<edge source="p npcomplete" target="np_problems">
  <data key="d1">some are</data>
</edge>
<edge source="integer factorization" target="npintermediate">
  <data key="d1">is a type of</data>
</edge>
<edge source="integer factorization" target="general number field sieve">
  <data key="d1">solved by</data>
</edge>
<edge source="integer factorization" target="best algorithm  ">
  <data key="d1">linked to</data>
</edge>
<edge source="npintermediate" target="discrete logarithm">
  <data key="d1">is a type of</data>
</edge>
<edge source="npintermediate" target="graph isomorphism">
  <data key="d1">is a type of</data>
</edge>
<edge source="npintermediate" target="np problems">
  <data key="d1">include</data>
</edge>
<edge source="npintermediate" target="graph isomorphism problem">
  <data key="d1">includes</data>
</edge>
<edge source="graph isomorphism problem" target="graphs">
  <data key="d1">is part of</data>
</edge>
<edge source="graph isomorphism problem" target="isomorphic">
  <data key="d1">is</data>
</edge>
<edge source="graph isomorphism problem" target="unsolved">
  <data key="d1">is part of</data>
</edge>
<edge source="graph isomorphism problem" target="answer">
  <data key="d1">has</data>
</edge>
<edge source="graphs" target="complexity theory">
  <data key="d1">related to</data>
</edge>
<edge source="unsolved" target="complexity theory">
  <data key="d1">is related to</data>
</edge>
<edge source="answer" target="correct answer">
  <data key="d1">associated with</data>
</edge>
<edge source="polynomial time hierarchy" target="second level">
  <data key="d1">includes</data>
</edge>
<edge source="np problems" target="time algorithms">
  <data key="d1">used for</data>
</edge>
<edge source="np problems" target="independence">
  <data key="d1">struggles to resolve</data>
</edge>
<edge source="np problems" target="proving independence">
  <data key="d1">challenge</data>
</edge>
<edge source="second" target="level">
  <data key="d1">part of</data>
</edge>
<edge source="lászló babai" target="best algorithm">
  <data key="d1">developed</data>
</edge>
<edge source="lászló babai" target="quasipolynomial time">
  <data key="d1">algorithms in</data>
</edge>
<edge source="lászló babai" target="best algorithm  ">
  <data key="d1">developed</data>
</edge>
<edge source="lászló babai" target="quasipolynomial time  ">
  <data key="d1">algorithms in</data>
</edge>
<edge source="quasipolynomial time" target="theoretical polynomial algorithm  ">
  <data key="d1">compared to</data>
</edge>
<edge source="quasipolynomial time" target="integer factorization  ">
  <data key="d1">concerns</data>
</edge>
<edge source="general number field sieve" target="first level">
  <data key="d1">used for</data>
</edge>
<edge source="general number field sieve" target="integer factorization  ">
  <data key="d1">solved by</data>
</edge>
<edge source="theoretical polynomial algorithm" target="large factors  ">
  <data key="d1">is impractical for</data>
</edge>
<edge source="theoretical polynomial algorithm" target="large factors">
  <data key="d1">is impractical for</data>
</edge>
<edge source="theoretical polynomial algorithm" target="deciding g h">
  <data key="d1">solves</data>
</edge>
<edge source="big o notation" target="constant h  ">
  <data key="d1">obscures</data>
</edge>
<edge source="big o notation" target="constant h">
  <data key="d1">obscures</data>
</edge>
<edge source="running time o(n2)" target="deciding g h  ">
  <data key="d1">solved in</data>
</edge>
<edge source="running time o(n2)" target="deciding g h">
  <data key="d1">runs in</data>
</edge>
<edge source="running time o(n2)" target="constant h">
  <data key="d1">affected by</data>
</edge>
<edge source="deciding g h" target="big o notation  ">
  <data key="d1">related to</data>
</edge>
<edge source="large factors" target="running time o(n²)  ">
  <data key="d1">impact</data>
</edge>
<edge source="constant h" target="running time o(n²)">
  <data key="d1">affects</data>
</edge>
<edge source="page_content" target="vertices">
  <data key="d1">has</data>
</edge>
<edge source="page_content" target="knuths h number">
  <data key="d1">discusses</data>
</edge>
<edge source="page_content" target="notes">
  <data key="d1">contains</data>
</edge>
<edge source="page_content" target="references">
  <data key="d1">contains</data>
</edge>
<edge source="page_content" target="second episode 2">
  <data key="d1">contains</data>
</edge>
<edge source="page_content" target="murders">
  <data key="d1">featured in</data>
</edge>
<edge source="page_content" target="mathematicians">
  <data key="d1">mentioned in</data>
</edge>
<edge source="knuths h number" target="algorithm for linear programming">
  <data key="d1">related to</data>
</edge>
<edge source="knuths h number" target="complexity">
  <data key="d1">mentions</data>
</edge>
<edge source="linear programming" target="polynomial-time complexity">
  <data key="d1">has</data>
</edge>
<edge source="polynomial-time complexity" target="algorithm for linear programming">
  <data key="d1">category of</data>
</edge>
<edge source="scientists" target="= np">
  <data key="d1">believe</data>
</edge>
<edge source="scientists" target="believe p ≠ np">
  <data key="d1">believe</data>
</edge>
<edge source="scientists" target="barriers">
  <data key="d1">suggest</data>
</edge>
<edge source="believe p ≠ np" target="challenges">
  <data key="d1">defines</data>
</edge>
<edge source="3000" target="np complete problems">
  <data key="d1">number</data>
</edge>
<edge source="polynomialtime algorithm" target="decades">
  <data key="d1">has duration</data>
</edge>
<edge source="polynomialtime algorithm" target="p=np  ">
  <data key="d1">equivalent to</data>
</edge>
<edge source="polynomialtime algorithm" target="problems  ">
  <data key="d1">significant for</data>
</edge>
<edge source="polynomialtime algorithm" target="p=np">
  <data key="d1">equivalent to</data>
</edge>
<edge source="polynomialtime algorithm" target="barriers">
  <data key="d1">concerns</data>
</edge>
<edge source="decades" target="polynomial time algorithm">
  <data key="d1">has duration</data>
</edge>
<edge source="decades" target="np complete problems">
  <data key="d1">focus for</data>
</edge>
<edge source="concept" target="algorithms">
  <data key="d1">exist before</data>
</edge>
<edge source="algorithms" target="polynomial accepting instances">
  <data key="d1">have</data>
</edge>
<edge source="algorithms" target="rejecting instances">
  <data key="d1">qualify polynomial</data>
</edge>
<edge source="algorithms" target="instances">
  <data key="d1">regulate</data>
</edge>
<edge source="complexity" target="descriptive">
  <data key="d1">relate to</data>
</edge>
<edge source="np complete problems" target="np complete">
  <data key="d1">part of</data>
</edge>
<edge source="conp" target="np complete">
  <data key="d1">connected to</data>
</edge>
<edge source="p=ph" target="real-world experiences">
  <data key="d1">contradicts</data>
</edge>
<edge source="fundamental fields" target="npcauses">
  <data key="d1">impact</data>
</edge>
<edge source="efficient problems" target="npcauses">
  <data key="d1">consequences</data>
</edge>
<edge source="proof algorithms" target="bounding polynomial">
  <data key="d1">require</data>
</edge>
<edge source="proof algorithms" target="constructive">
  <data key="d1">is not</data>
</edge>
<edge source="proof algorithms" target="specific bound">
  <data key="d1">requires</data>
</edge>
<edge source="bounding polynomial" target="small">
  <data key="d1">define</data>
</edge>
<edge source="specific bound" target="nonconstructive proof">
  <data key="d1">lacks</data>
</edge>
<edge source="solution np" target="solution p">
  <data key="d1">upend</data>
</edge>
<edge source="solution np" target="secure solutions">
  <data key="d1">related to</data>
</edge>
<edge source="solution np" target="cryptosystems">
  <data key="d1">relate</data>
</edge>
<edge source="solution np" target="efficient algorithm">
  <data key="d1">address</data>
</edge>
<edge source="3sat" target="cryptosystems">
  <data key="d1">break</data>
</edge>
<edge source="3sat" target="biotechnology">
  <data key="d1">tie</data>
</edge>
<edge source="replacement" target="secure solutions">
  <data key="d1">secure</data>
</edge>
<edge source="secure solutions" target="efficient algorithm">
  <data key="d1">benefit</data>
</edge>
<edge source="sciences" target="biotechnology">
  <data key="d1">include</data>
</edge>
<edge source="efficient algorithm" target="prize problems">
  <data key="d1">solves</data>
</edge>
<edge source="theorem" target="mathematicians">
  <data key="d1">proven by</data>
</edge>
<edge source="theorem" target="three centuries">
  <data key="d1">proven in</data>
</edge>
<edge source="theorem" target="fermat's last theorem">
  <data key="d1">example of</data>
</edge>
<edge source="theorem" target="struggle">
  <data key="d1">relates to</data>
</edge>
<edge source="mathematicians" target="fermats last theorem">
  <data key="d1">challenges</data>
</edge>
<edge source="mathematicians" target="travelling salesman">
  <data key="d1">features</data>
</edge>
<edge source="mathematicians" target="murders">
  <data key="d1">related to</data>
</edge>
<edge source="cmi" target="prize problems">
  <data key="d1">offers</data>
</edge>
<edge source="fermats last theorem" target="three centuries">
  <data key="d1">proven in</data>
</edge>
<edge source="p≠np" target="belief">
  <data key="d1">relates to</data>
</edge>
<edge source="p≠np" target="research">
  <data key="d1">concerns</data>
</edge>
<edge source="p≠np" target="barriers  ">
  <data key="d1">faces</data>
</edge>
<edge source="p≠np" target="difficulty">
  <data key="d1">concerns</data>
</edge>
<edge source="p≠np" target="barriers">
  <data key="d1">faces</data>
</edge>
<edge source="belief" target="struggle">
  <data key="d1">related to</data>
</edge>
<edge source="belief" target="averagecase complexity">
  <data key="d1">connected to</data>
</edge>
<edge source="belief" target="five worlds ">
  <data key="d1">related to</data>
</edge>
<edge source="research" target="struggle">
  <data key="d1">involves</data>
</edge>
<edge source="research" target="partial solutions">
  <data key="d1">related to</data>
</edge>
<edge source="research" target="averagecase complexity">
  <data key="d1">involves</data>
</edge>
<edge source="research" target="sat time">
  <data key="d1">related to</data>
</edge>
<edge source="russell impagliazzo" target="five worlds">
  <data key="d1">proposed</data>
</edge>
<edge source="russell impagliazzo" target="page_content=xa0≠xa0np leaves averagecase complexity. sat time worst all instances solvable. russell impagliazzo five worlds resolutions averagecase complexity. pxa0xa0np sat solved">
  <data key="d1">associated with</data>
</edge>
<edge source="russell impagliazzo" target="research ">
  <data key="d1">linked to</data>
</edge>
<edge source="five worlds" target="averagecase complexity">
  <data key="d1">resolve</data>
</edge>
<edge source="five worlds" target="page_content=xa0≠xa0np leaves averagecase complexity. sat time worst all instances solvable. russell impagliazzo five worlds resolutions averagecase complexity. pxa0xa0np sat solved">
  <data key="d1">explain</data>
</edge>
<edge source="five worlds" target="2009">
  <data key="d1">contextualizes</data>
</edge>
<edge source="averagecase complexity" target="sat time">
  <data key="d1">involves</data>
</edge>
<edge source="averagecase complexity" target="nphard">
  <data key="d1">affects</data>
</edge>
<edge source="difficulty" target="three">
  <data key="d1">resulted in</data>
</edge>
<edge source="difficulty" target="three  ">
  <data key="d1">resulted in</data>
</edge>
<edge source="difficulty" target="proof techniques  ">
  <data key="d1">related to</data>
</edge>
<edge source="difficulty" target="p≠np  ">
  <data key="d1">concerns</data>
</edge>
<edge source="difficulty" target="proof techniques">
  <data key="d1">related to</data>
</edge>
<edge source="three" target="intermediate possibilities">
  <data key="d1">have</data>
</edge>
<edge source="three" target="inter possibilities">
  <data key="d1">resulted in</data>
</edge>
<edge source="three" target="intermediate possibilities  ">
  <data key="d1">have</data>
</edge>
<edge source="three" target="inter possibilities  ">
  <data key="d1">resulted in</data>
</edge>
<edge source="nphard" target="nphard">
  <data key="d1">subset of</data>
</edge>
<edge source="nphard" target="problems  ">
  <data key="d1">subset of</data>
</edge>
<edge source="nphard" target="difficulty  ">
  <data key="d1">challenged by</data>
</edge>
<edge source="heuristica" target="princeton university">
  <data key="d1">organized by</data>
</edge>
<edge source="heuristica" target="princeton university  ">
  <data key="d1">organized by</data>
</edge>
<edge source="heuristica" target="proof techniques  ">
  <data key="d1">addressed</data>
</edge>
<edge source="workshop" target="2009">
  <data key="d1">held on</data>
</edge>
<edge source="workshop" target="2009  ">
  <data key="d1">held on</data>
</edge>
<edge source="workshop" target="difficulty  ">
  <data key="d1">highlighted</data>
</edge>
<edge source="proof techniques" target="computational complexity theory  ">
  <data key="d1">applied in</data>
</edge>
<edge source="proof techniques" target="insufficient  ">
  <data key="d1">found as</data>
</edge>
<edge source="proof techniques" target="prove  ">
  <data key="d1">used to</data>
</edge>
<edge source="proof techniques" target="workshop  ">
  <data key="d1">discussed in</data>
</edge>
<edge source="proof techniques" target="computational complexity theory">
  <data key="d1">applied in</data>
</edge>
<edge source="proof techniques" target="insufficient">
  <data key="d1">found as</data>
</edge>
<edge source="proof techniques" target="prove">
  <data key="d1">used to</data>
</edge>
<edge source="barriers" target="independence">
  <data key="d1">suggested by</data>
</edge>
<edge source="p=np" target="problem  ">
  <data key="d1">concerns</data>
</edge>
<edge source="zfc" target="axioms">
  <data key="d1">involves</data>
</edge>
<edge source="zfc" target="independence">
  <data key="d1">is difficult to prove in</data>
</edge>
<edge source="zfc" target="algorithms and computational complexity">
  <data key="d1">considers independence in</data>
</edge>
<edge source="independence" target="proofs">
  <data key="d1">show</data>
</edge>
<edge source="independence" target="pa">
  <data key="d1">is difficult to prove in</data>
</edge>
<edge source="weaker assumptions" target="peano axioms">
  <data key="d1">include</data>
</edge>
<edge source="assumptions" target="peano">
  <data key="d1">related to</data>
</edge>
<edge source="peano" target="axioms">
  <data key="d1">part of</data>
</edge>
<edge source="axioms" target="arithmetic">
  <data key="d1">applies to</data>
</edge>
<edge source="arithmetic" target="pa">
  <data key="d1">lay foundations for</data>
</edge>
<edge source="proving independence" target="efficient algorithms">
  <data key="d1">used for</data>
</edge>
<edge source="efficient algorithms" target="descriptive">
  <data key="d1">helps to understand</data>
</edge>
<edge source="efficient algorithms" target="logical statements">
  <data key="d1">relates to</data>
</edge>
<edge source="characterizations" target="languages">
  <data key="d1">relate to</data>
</edge>
<edge source="logical statements" target="descriptive">
  <data key="d1">are</data>
</edge>
<edge source="logical statements" target="descriptive  ">
  <data key="d1">are</data>
</edge>
<edge source="descriptive" target="complexity  ">
  <data key="d1">relate to</data>
</edge>
<edge source="languages" target="finite structures  ">
  <data key="d1">describe</data>
</edge>
<edge source="languages" target="firstorder logic  ">
  <data key="d1">expressed in</data>
</edge>
<edge source="languages" target="finite structures">
  <data key="d1">describe</data>
</edge>
<edge source="languages" target="firstorder logic">
  <data key="d1">expressed in</data>
</edge>
<edge source="languages" target="polynomial hierarchy">
  <data key="d1">part of</data>
</edge>
<edge source="languages" target="secondorder logic">
  <data key="d1">describe</data>
</edge>
<edge source="finite structures" target="fixed signature  ">
  <data key="d1">with</data>
</edge>
<edge source="finite structures" target="linear order relation  ">
  <data key="d1">in</data>
</edge>
<edge source="finite structures" target="fixed signature">
  <data key="d1">with</data>
</edge>
<edge source="finite structures" target="linear order relation">
  <data key="d1">in</data>
</edge>
<edge source="linear order relation" target="functions  ">
  <data key="d1">defined by</data>
</edge>
<edge source="linear order relation" target="functions">
  <data key="d1">defined by</data>
</edge>
<edge source="linear order relation" target="signature">
  <data key="d1">part of</data>
</edge>
<edge source="firstorder logic" target="fixedpoint combinator  ">
  <data key="d1">with</data>
</edge>
<edge source="firstorder logic" target="fixedpoint combinator">
  <data key="d1">with</data>
</edge>
<edge source="fixed signature" target="signature">
  <data key="d1">part of</data>
</edge>
<edge source="functions" target="recursive functions">
  <data key="d1">defined in</data>
</edge>
<edge source="signature" target="predicate">
  <data key="d1">part of</data>
</edge>
<edge source="predicate" target="function">
  <data key="d1">part of</data>
</edge>
<edge source="function" target="space">
  <data key="d1">exists in</data>
</edge>
<edge source="space" target="structures">
  <data key="d1">contains</data>
</edge>
<edge source="space" target="elements">
  <data key="d1">contains</data>
</edge>
<edge source="structures" target="nontrivial">
  <data key="d1">attribute</data>
</edge>
<edge source="structures" target="first">
  <data key="d1">describes</data>
</edge>
<edge source="number" target="elements">
  <data key="d1">characterizes</data>
</edge>
<edge source="elements" target="structure">
  <data key="d1">characterizes</data>
</edge>
<edge source="existential secondorder quantification" target="polynomial hierarchy">
  <data key="d1">align with</data>
</edge>
<edge source="polynomial hierarchy" target="secondorder logic">
  <data key="d1">correspond to</data>
</edge>
<edge source="secondorder logic" target="nontrivial first-order structures">
  <data key="d1">include</data>
</edge>
<edge source="nontrivial" target="first">
  <data key="d1">related to</data>
</edge>
<edge source="first" target="fixed point">
  <data key="d1">related to</data>
</edge>
<edge source="fixed point" target="page">
  <data key="d1">type of</data>
</edge>
<edge source="ph" target="polynomial accepting instances">
  <data key="d1">associated with</data>
</edge>
<edge source="polynomial accepting instances" target="enormous constants">
  <data key="d1">have</data>
</edge>
<edge source="enormous constants" target="algorithms impractical">
  <data key="d1">make</data>
</edge>
<edge source="instances" target="npcomplete languagesum">
  <data key="d1">is related to</data>
</edge>
<edge source="levin's work" target="polynomial time inputs">
  <data key="d1">involves</data>
</edge>
<edge source="levin's work" target="npcomplete languagesum">
  <data key="d1">is related to</data>
</edge>
<edge source="example n npcomplete n languagesum n polynomial time" target="npcomplete languagesum">
  <data key="d1">accepts</data>
</edge>
<edge source="example n npcomplete n languagesum n polynomial time" target="polynomial time inputs">
  <data key="d1">runs</data>
</edge>
<edge source="npcomplete languagesum" target="acceptingcomplete language">
  <data key="d1">belongs to</data>
</edge>
<edge source="acceptingcomplete language" target="acceptingcomplete language">
  <data key="d1">is type of</data>
</edge>
<edge source="input string" target="string w">
  <data key="d1">related to</data>
</edge>
<edge source="input string" target="n">
  <data key="d1">denoted by</data>
</edge>
<edge source="input string" target="decision problem">
  <data key="d1">requires</data>
</edge>
<edge source="string w" target="alphabet">
  <data key="d1">related to</data>
</edge>
<edge source="n" target="(m)">
  <data key="d1">accepts</data>
</edge>
<edge source="n" target="steps">
  <data key="d1">requires</data>
</edge>
<edge source="n" target="n{k}">
  <data key="d1">o</data>
</edge>
<edge source="n" target="t_{m}(n)">
  <data key="d1">involves</data>
</edge>
<edge source="n" target="m">
  <data key="d1">accepts</data>
</edge>
<edge source="n" target="\sigma*">
  <data key="d1">accepts</data>
</edge>
<edge source="alphabet" target="σ">
  <data key="d1">represented by</data>
</edge>
<edge source="alphabet" target="finiteplaintext">
  <data key="d1">is type of</data>
</edge>
<edge source="alphabet" target="finite alphabet">
  <data key="d1">is type of</data>
</edge>
<edge source="alphabet" target="binary relation">
  <data key="d1">over</data>
</edge>
<edge source="σ" target="r">
  <data key="d1">subset of</data>
</edge>
<edge source="outputs" target="yes">
  <data key="d1">included</data>
</edge>
<edge source="steps" target="t_{m}(w)">
  <data key="d1">used in</data>
</edge>
<edge source="steps" target="t_{m}(n)">
  <data key="d1">initiates</data>
</edge>
<edge source="decision problem" target="certificate verifier">
  <data key="d1">requires</data>
</edge>
<edge source="finite alphabet" target="verifier">
  <data key="d1">used by</data>
</edge>
<edge source="finite alphabet" target="finiteplaintext">
  <data key="d1">is related to</data>
</edge>
<edge source="verifier" target="certificate">
  <data key="d1">used by</data>
</edge>
<edge source="l" target="conditions">
  <data key="d1">satisfies</data>
</edge>
<edge source="r" target="binary relation">
  <data key="d1">subset of</data>
</edge>
<edge source="timothy lanzone" target="sixth episode">
  <data key="d1">features in</data>
</edge>
<edge source="timothy lanzone" target="travelling salesman">
  <data key="d1">directed</data>
</edge>
<edge source="equation p" target="dimension">
  <data key="d1">involves</data>
</edge>
<edge source="homer" target="simpsons">
  <data key="d1">features</data>
</edge>
<edge source="simpions" target="mathematical ideas">
  <data key="d1">features</data>
</edge>
<edge source="second episode 2" target="sherlock">
  <data key="d1">features</data>
</edge>
<edge source="second episode 2" target="watson">
  <data key="d1">features</data>
</edge>
<edge source="second episode 2" target="murders">
  <data key="d1">includes</data>
</edge>
<edge source="notes" target="deterministic polynomial-time turing machines">
  <data key="d1">mentions</data>
</edge>
<edge source="references" target="time poly functions">
  <data key="d1">includes</data>
</edge>
<edge source="(m)" target="\sigma">
  <data key="d1">consists of</data>
</edge>
<edge source="\sigma" target="y">
  <data key="d1">exists in</data>
</edge>
<edge source="halt" target="t_{m}">
  <data key="d1">input</data>
</edge>
<edge source="t_{m}(w)" target="\sigma*">
  <data key="d1">uses</data>
</edge>
<edge source="t_{m}(w)" target="t_{m}(n)">
  <data key="d1">related to</data>
</edge>
<edge source="t_{m}(w)" target="n{k}">
  <data key="d1">involves</data>
</edge>
<edge source="n{k}" target="o">
  <data key="d1">pairs with</data>
</edge>
<edge source="n{k}" target="{x#y">
  <data key="d1">linked to</data>
</edge>
<edge source="o" target="|x^{k}">
  <data key="d1">used in</data>
</edge>
<edge source="t_{m}(n)" target="{m}">
  <data key="d1">consists of</data>
</edge>
<edge source="t_{m}(n)" target="time poly functions">
  <data key="d1">constrains</data>
</edge>
<edge source="l_{r}" target="{x#y">
  <data key="d1">involves</data>
</edge>
<edge source="l_{r}" target="{x">
  <data key="d1">pairs</data>
</edge>
<edge source="l_{r}" target="f">
  <data key="d1">connected to</data>
</edge>
<edge source="{x#y" target="|y">
  <data key="d1">o</data>
</edge>
<edge source="{x" target="y">
  <data key="d1">paired with</data>
</edge>
<edge source="y" target="(x)">
  <data key="d1">paired with</data>
</edge>
<edge source="{m}" target="t{m}(n)">
  <data key="d1">consists of</data>
</edge>
<edge source="sigma" target="sigma*">
  <data key="d1">used in</data>
</edge>
<edge source="sigma*" target="wikimedia foundation">
  <data key="d1">references</data>
</edge>
<edge source="sigma*" target="mediawiki">
  <data key="d1">related to</data>
</edge>
<edge source="t_{m}(n))" target="(x">
  <data key="d1">used in</data>
</edge>
<edge source="(x" target="y)">
  <data key="d1">coupled with</data>
</edge>
<edge source="f" target="w">
  <data key="d1">element of</data>
</edge>
<edge source="w" target="mediawiki">
  <data key="d1">coupled with</data>
</edge>
<edge source="composite" target="x">
  <data key="d1">is type of</data>
</edge>
<edge source="mediawiki" target="wikimedia foundation">
  <data key="d1">owns</data>
</edge>
<edge source="\(1 &lt; y \leq x\)" target="\(x^{k}\)">
  <data key="d1">involves</data>
</edge>
<edge source="&quot;x&quot;" target="&quot;prime factors&quot;">
  <data key="d1">composed of</data>
</edge>
<edge source="birch and swinnerton-dyer conjecture hodge conjecture navier–stokes existence and smoothness p versus np problem poincaré conjecture (solved) riemann hypothesis yang–mills existence and mass gap" target="birch and swinnerton-dyer conjecture hodge conjecture navier–stokes existence and smoothness p versus np problem poincaré conjecture (solved) riemann hypothesis yang–mills existence and mass gap">
  <data key="d1">millennium prize problems</data>
</edge>
<edge source="birch and swinnerton-dyer conjecture hodge conjecture navier–stokes existence and smoothness p versus np problem poincaré conjecture (solved) riemann hypothesis yang–mills existence and mass gap" target="0">
  <data key="d1">positioninlist</data>
</edge>
<edge source="0" target="relativizing proofs">
  <data key="d1">positioninlist</data>
</edge>
<edge source="0" target="considered feasible">
  <data key="d1">positioninlist</data>
</edge>
<edge source="vte" target="vte">
  <data key="d1">millennium prize problems</data>
</edge>
<edge source="vte" target="1relativizing proofs">
  <data key="d1">positioninlist</data>
</edge>
<edge source="relativizing proofs" target="imagine a world where every algorithm is allowed to make queries to some fixed subroutine called an oracle (which can answer a fixed set of questions in constant time">
  <data key="d1">definition</data>
</edge>
<edge source="natural proofs" target="natural proofs">
  <data key="d1">classification</data>
</edge>
<edge source="natural proofs" target="1">
  <data key="d1">positioninlist</data>
</edge>
<edge source="natural proofs" target="in 1993">
  <data key="d1">definition</data>
</edge>
<edge source="1" target="suspected infeasible">
  <data key="d1">positioninlist</data>
</edge>
<edge source="algebrizing proofs" target="algebrizing proofs">
  <data key="d1">classification</data>
</edge>
<edge source="algebrizing proofs" target="2">
  <data key="d1">positioninlist</data>
</edge>
<edge source="algebrizing proofs" target="after the baker–gill–solovay result">
  <data key="d1">definition</data>
</edge>
<edge source="algebrizing proofs" target="2considered feasible">
  <data key="d1">positioninlist</data>
</edge>
<edge source="2" target="considered infeasible">
  <data key="d1">positioninlist</data>
</edge>
<edge source="considered feasible" target="dlogtime ac0 acc0 tc0 l sl rl fl nl nl-complete nc sc cc p p-complete zpp rp bpp bqp apx fp">
  <data key="d1">vtecomplexity classes.1</data>
</edge>
<edge source="suspected infeasible" target="suspected infeasible">
  <data key="d1">vtecomplexity classes</data>
</edge>
<edge source="suspected infeasible" target="up np np-complete np-hard co-np co-np-complete tfnp fnp am qma ph ⊕p pp #p #p-complete ip pspace pspace-complete">
  <data key="d1">vtecomplexity classes.1</data>
</edge>
<edge source="considered infeasible" target="considered infeasible">
  <data key="d1">vtecomplexity classes</data>
</edge>
<edge source="considered infeasible" target="exptime nexptime expspace 2-exptime elementary pr r re all">
  <data key="d1">vtecomplexity classes.1</data>
</edge>
<edge source="class hierarchies" target="class hierarchies">
  <data key="d1">vtecomplexity classes</data>
</edge>
<edge source="class hierarchies" target="3">
  <data key="d1">positioninlist</data>
</edge>
<edge source="class hierarchies" target="polynomial hierarchy exponential hierarchy grzegorczyk hierarchy arithmetical hierarchy boolean hierarchy">
  <data key="d1">vtecomplexity classes.1</data>
</edge>
<edge source="families of classes" target="families of classes">
  <data key="d1">vtecomplexity classes</data>
</edge>
<edge source="families of classes" target="4">
  <data key="d1">positioninlist</data>
</edge>
<edge source="families of classes" target="dtime ntime dspace nspace probabilistically checkable proof interactive proof system">
  <data key="d1">vtecomplexity classes.1</data>
</edge>
<edge source="list of complexity classes" target="list of complexity classes">
  <data key="d1">vtecomplexity classes.1</data>
</edge>
<edge source="list of complexity classes" target="5">
  <data key="d1">positioninlist</data>
</edge>
</graph></graphml>